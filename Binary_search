"""You're going to write a binary search function.
You should use an iterative approach - meaning
using loops.
Your function should take two inputs:
a Python list to search through, and the value
you're searching for.
Assume the list only has distinct elements,
meaning there are no repeated values, and 
elements are in a strictly increasing order.
Return the index of value, or -1 if the value
doesn't exist in the list."""

# def binary_search(sequence, item):
#     begin_index = 0
#     end_index = len(sequence) - 1

#     while begin_index #less than= end_index:
#         midpoint = begin_index + (end_index - begin_index) // 2
#         midpoint_value = sequence[midpoint]
#         if midpoint_value == item:
#             return midpoint

#         elif item #less than midpoint_value:
#             end_index = midpoint - 1

#         else:
#             begin_index = midpoint + 1

#     return None

def binary_search1(test_list, value):
    """Your code goes here."""
    begin = 0
    end = len(test_list) -1 
    while begin <= end:
        mid = begin + (end - begin) //2
        midv = test_list[mid]
        if midv == value:
            return mid
        elif value < midv:
            end = mid - 1
        else:
            begin = mid + 1
            
    return -1

test_list = [1,3,9,11,15,19,29]
test_val1 = 25
test_val2 = 15
print(binary_search1(test_list, test_val1))
print(binary_search1(test_list, test_val2))
